# Generated by Django 4.2.7 on 2025-11-01 10:24

from django.db import migrations, models
import json


def migrate_quote_items_to_json(apps, schema_editor):
    """Migrate QuoteItem data to Quote.items JSON field"""
    Quote = apps.get_model('myapp', 'Quote')
    QuoteItem = apps.get_model('myapp', 'QuoteItem')
    
    # Use raw SQL to update items JSON field
    db_alias = schema_editor.connection.alias
    
    # Check if items column exists, if not create it first
    with schema_editor.connection.cursor() as cursor:
        cursor.execute("SHOW COLUMNS FROM myapp_quote LIKE 'items'")
        if not cursor.fetchone():
            cursor.execute("ALTER TABLE myapp_quote ADD COLUMN items JSON DEFAULT ('[]')")
    
    for quote in Quote.objects.using(db_alias).all():
        items = []
        # Get items for this quote using the foreign key
        quote_items = QuoteItem.objects.using(db_alias).filter(quote_id=quote.id).order_by('id')
        for item in quote_items:
            items.append({
                'description': item.description,
                'quantity': item.quantity,
                'unit_price': str(item.unit_price),
                'gst_percent': str(item.gst_percent),
                'amount': str(item.amount)
            })
        
        # Update using raw SQL to avoid model conflicts
        import json as json_lib
        items_json = json_lib.dumps(items)
        with schema_editor.connection.cursor() as cursor:
            cursor.execute(
                "UPDATE myapp_quote SET items = %s WHERE id = %s",
                [items_json, quote.id]
            )


def reverse_migrate_quote_items(apps, schema_editor):
    """Reverse migration - create QuoteItem from JSON (if needed)"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('myapp', '0007_attendance'),
    ]

    operations = [
        migrations.RunPython(migrate_quote_items_to_json, reverse_migrate_quote_items, atomic=False),
        migrations.AddField(
            model_name='quote',
            name='items',
            field=models.JSONField(blank=True, default=list, help_text='List of quote items'),
        ),
        migrations.DeleteModel(
            name='QuoteItem',
        ),
    ]
